<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Krafs.Publicizer.1.0.2\build\Krafs.Publicizer.props" Condition="Exists('..\packages\Krafs.Publicizer.1.0.2\build\Krafs.Publicizer.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{188A19DC-AD78-4293-BB89-B8218E0709A2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>kOSEVA</RootNamespace>
    <AssemblyName>kOS-EVA</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>portable</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  <!--Import targets now, which will import the .csproj.user where the path to the KSP install root must be defined in ReferencePath-->
  <!--This must be done after the main project poperties are defined because it needs the target framework property to be defined -->
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!--Parse KSP platform-specific paths and set the start action-->
  <PropertyGroup>
    <KSPExecutable Condition="$([MSBuild]::IsOsPlatform('Windows'))">KSP_x64.exe</KSPExecutable>
    <KSPExecutable Condition="$([MSBuild]::IsOsPlatform('OSX'))">KSP.app</KSPExecutable>
    <KSPExecutable Condition="$([MSBuild]::IsOsPlatform('Linux'))">KSP.x86_64</KSPExecutable>
    <ManagedRelativePath Condition="$([MSBuild]::IsOsPlatform('Windows'))">KSP_x64_Data\Managed</ManagedRelativePath>
    <ManagedRelativePath Condition="$([MSBuild]::IsOsPlatform('OSX'))">KSP.app\Contents\Resources\Data\Managed</ManagedRelativePath>
    <ManagedRelativePath Condition="$([MSBuild]::IsOsPlatform('Linux'))">KSP_Data\Managed</ManagedRelativePath>
    <ManagedPath>$(ReferencePath)$(ManagedRelativePath)</ManagedPath>
    <StartAction>Program</StartAction>
    <StartProgram>$(ReferencePath)$(KSPExecutable)</StartProgram>
    <StartWorkingDirectory>$(ReferencePath)</StartWorkingDirectory>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="$(ManagedPath)\Assembly-CSharp.dll">
      <Private>false</Private>
    </Reference>
    <Reference Include="$(ManagedPath)\Assembly-CSharp-firstpass.dll">
      <Private>false</Private>
    </Reference>
    <Reference Include="$(ReferencePath)GameData\kOS\Plugins\kOS.dll">
      <Private>False</Private>
    </Reference>
    <Reference Include="$(ReferencePath)GameData\kOS\Plugins\kOS.Safe.dll">
      <Private>False</Private>
    </Reference>
    <Reference Include="$(ReferencePath)GameData\000_Harmony\0Harmony.dll">
      <Private>False</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="UnityEngine">
      <Private>False</Private>
    </Reference>
    <Reference Include="$(ManagedPath)\UnityEngine.AnimationModule.dll">
      <Private>False</Private>
    </Reference>
    <Reference Include="$(ManagedPath)\UnityEngine.CoreModule.dll">
      <Private>False</Private>
    </Reference>
    <Reference Include="$(ManagedPath)\UnityEngine.InputLegacyModule.dll">
      <Private>False</Private>
    </Reference>
    <Reference Include="$(ManagedPath)\UnityEngine.PhysicsModule.dll">
      <Private>False</Private>
    </Reference>
    <Reference Include="$(ManagedPath)\UnityEngine.UI.dll">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Publicize Include="Assembly-CSharp" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Addon.cs" />
    <Compile Include="EvaController.cs" />
    <Compile Include="KerbalAnimationClip.cs" />
    <Compile Include="KerbalEVAUtility.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <PropertyGroup>
    <PostBuildEvent>copy $(TargetDir)$(TargetName).* $(SolutionDir)GameData\kOS-EVA\Plugins\</PostBuildEvent>
  </PropertyGroup>
  <Import Project="..\packages\Krafs.Publicizer.1.0.2\build\Krafs.Publicizer.targets" Condition="Exists('..\packages\Krafs.Publicizer.1.0.2\build\Krafs.Publicizer.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Krafs.Publicizer.1.0.2\build\Krafs.Publicizer.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Krafs.Publicizer.1.0.2\build\Krafs.Publicizer.targets'))" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>